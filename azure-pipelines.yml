trigger:
- main  # or your default branch

pool:
  vmImage: ubuntu-latest

variables:
- group: matlab-secrets  # Add this line to import the variable group
  # - task: RunMATLABTests@1
  #   inputs:
  #     sourceFolder: code
  #     codeCoverageCobertura: code-coverage/coverage.xml
  #     testResultsJUnit: test-results/results.xml
  # - task: PublishTestResults@2
  #   condition: always()
  #   inputs:
  #     testResultsFormat: 'JUnit'
  #     testResultsFiles: 'test-results/results.xml'
  # - task: PublishCodeCoverageResults@1
  #   condition: always()
  #   inputs:
  #     codeCoverageTool: 'Cobertura'
  #     summaryFileLocation: 'code-coverage/coverage.xml'
  #     pathToSources: 'code/'

  # As an alternative to RunMATLABTests, you can use RunMATLABCommand to execute a MATLAB script, function, or statement.
  # - task: RunMATLABCommand@1
  #   inputs:
  #     command: disp('Running my custom testing procedure!'); addpath('code'); secrettest;

steps:
  - task: InstallMATLAB@1

  - script: |
      echo "Running my custom testing procedure!"
      matlab -batch "secrettest"
    displayName: "Run secrettest MATLAB script"
    env:
      MATLAB_APP_KEY: $(API_KEY)  # Set env var for MATLAB
